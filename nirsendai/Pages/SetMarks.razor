    @page "/application-grades"
    @using nirsendai.Data

    <PageTitle>Marks</PageTitle>

    <head>
        <link rel="stylesheet" href="../Shared/MainLayout.razor.css" />
    </head>
    <h1>Applications</h1>

    <p>This component demonstrates fetching data from a service.</p>

    @if (requests_list == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Номер</th>
                    <th>Название</th>
                    <th>Статус</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var i in requests_list)
                {
                    <tr>
                        <td>@i.id</td>
                        <td>@i.title</td>
                        <td>@i.status</td>
                        <td><button class="btn btn-primary" @onclick="() => ShowModal(i)">Оценить</button></td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @if (selectedRequest != null)
    {
        <div style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); display: flex; justify-content: center; align-items: center;">
            <div style="background-color: white; padding: 20px; border-radius: 5px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);">
                <h2>Оценка заявки @selectedRequest.id</h2>
            <table class="table">
                <thead>
                    <tr>
                        <th>Вид планируемых к реализации мероприятий</th>
                        <th class="special_class" colspan="5">Критерии оценки</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td></td>
                        <td>а) общие сведения о Практике (обозначение критерия - Кn, n- номер Практики)</td>
                        <td>б) соотношение затрат на осуществление Практики и эффективности от ее реализации (обозначение критерия – Sn, n- номер Практики)</td>
                        <td>в) условия тиражирования Практики (обозначение критерия – Rn, n- номер Практики)</td>
                        <td>г) эффект от реализации Практики (обозначение критерия – Un,n- номер Практики)</td>
                    </tr>
                    <tr>
                        <td>1. Мероприятия, направленные на предупреждение ЧС (Типовые мероприятия см. в Приложении 2 к Методике)</td>
                        <td>0–100<input /></td>
                        <td>0–100<input /></td>
                        <td>0–100<input /></td>
                        <td>0–100<input /></td>
                    </tr>
                    <tr>
                        <td>2. Мероприятия, направленные на готовность к ЧС (Типовые мероприятия см. в Приложении 2 к Методике)</td>
                        <td>0–100<input /></td>
                        <td>0–100<input /></td>
                        <td>0–100<input /></td>
                        <td>0–100<input /></td>
                    </tr>
                    <tr>
                        <td>3. Мероприятия, направленные на реагирование и ликвидацию ЧС (Типовые мероприятия см. в Приложении 2 к Методике)</td>
                        <td>0–100<input /></td>
                        <td>0–100<input /></td>
                        <td>0–100<input /></td>
                        <td>0–100<input /></td>
                    </tr>
                    <tr>
                        <td>4. Мероприятия, направленные на восстановление после ЧС, по принципу «делать лучше, чем было  (Типовые мероприятия см. в Приложении 2 к Методике)  </td>
                        <td>0–100<input /></td>
                        <td>0–100<input /></td>
                        <td>0–100<input /></td>
                        <td>0–100<input /></td>
                    </tr>
                    <tr>
                        <td>Весовой коэффициент критерия</td>
                        <td>0.2</td>
                        <td>0.3</td>
                        <td>0.3</td>
                        <td>0.2</td>
                    </tr>
                    <tr>
                        <td>Итого</td>
                        <td>0–20</td>
                        <td>0–30</td>
                        <td>0–40</td>
                        <td>0–10</td>
                    </tr>
                </tbody>
            </table>
                <button class="btn btn-primary" @onclick="CloseModal">Закрыть</button>
            <button class="btn btn-primary" >Подтвердить</button>
            </div>
        </div>
    }

@code {
    public class PracticeEvaluation
    {
        // Метод для расчета окончательной оценки по критериям
        public double CalculateFinalScore(double[] weights, double[] criterionK, double[] criterionS, double[] criterionR, double[] criterionU)
        {
            // Проверка на совпадение размеров массивов
            if (weights.Length != 4 || criterionK.Length != criterionS.Length || criterionS.Length != criterionR.Length || criterionR.Length != criterionU.Length)
            {
                throw new ArgumentException("Некорректные размеры массивов");
            }

            // Расчет усредненной оценки для критерия K
            double averageK = CalculateAverage(criterionK);

            // Расчет усредненной оценки для критерия S
            double averageS = CalculateAverage(criterionS);

            // Расчет усредненной оценки для критерия R
            double averageR = CalculateAverage(criterionR);

            // Расчет усредненной оценки для критерия U
            double averageU = CalculateAverage(criterionU);

            // Расчет окончательной оценки
            double finalScore = weights[0] * averageK + weights[1] * averageS + weights[2] * averageR + weights[3] * averageU;

            return finalScore;
        }

        // Метод для расчета усредненной оценки по критерию
        private double CalculateAverage(double[] criterion)
        {
            double sum = 0;
            int count = criterion.Length;

            foreach (double score in criterion)
            {
                sum += score;
            }

            double average = sum / count;
            return average;
        }
    }
    class Zayavka
    {
        public int id;
        public String title;
        public String status;

        public Zayavka(int id, String title, String status)
        {
            this.id = id;
            this.title = title;
            this.status = status;
        }
    }

    class Criterion
    {
        public string Name { get; set; }
        public int Grade { get; set; }
    }
    //добавить координатора

    List<Zayavka> requests_list;
    Zayavka selectedRequest;
    List<Criterion> criteriaList;

    protected override async Task OnInitializedAsync()
    {
        using (var db = new Models.NirsendaiContext())
        {

            requests_list = new List<Zayavka>() { new Zayavka(1, "sss", "ddd"), new Zayavka(2, "aaa", "xxx"), new Zayavka(3, "www", "vvv") };
            criteriaList = new List<Criterion>() { new Criterion() { Name = "Criterion 1", Grade = 5 }, new Criterion() { Name = "Criterion 2", Grade = 4 }, new Criterion() { Name = "Criterion 3", Grade = 3 } };
        }
    }
        private void ShowModal(Zayavka request)
        {
            selectedRequest = request;
        }

        private void CloseModal()
        {
            selectedRequest = null;
        }
    }